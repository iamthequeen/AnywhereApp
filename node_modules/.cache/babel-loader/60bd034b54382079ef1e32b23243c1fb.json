{"ast":null,"code":"function LoginValidation(existingUser, loginDetails) {\n  let errors = {};\n\n  if (!loginDetails.email) {\n    errors.email = \"Email is required.\";\n  } else if (!/\\S+@\\S+\\.\\S+/.test(loginDetails.email)) {\n    errors.email = \"Email is invalid.\";\n  }\n\n  if (!loginDetails.password) {\n    errors.password = \"Password is required.\";\n  }\n\n  if (loginDetails.email === existingUser.email) {\n    errors.email = \"This account already exists.\";\n  }\n\n  if (loginDetails.password === existingUser.password) {\n    errors.password = \"Password is incorrect.\";\n  }\n\n  return errors;\n}\n\n_c = LoginValidation;\nexport default LoginValidation;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginValidation\");","map":{"version":3,"sources":["C:/Users/Geraldine/Downloads/Coding Projects/New Projects/anywhere-signup-login/AnywhereApp/src/components/LoginValidation.js"],"names":["LoginValidation","existingUser","loginDetails","errors","email","test","password"],"mappings":"AACA,SAASA,eAAT,CAAyBC,YAAzB,EAAuCC,YAAvC,EAAqD;AACjD,MAAIC,MAAM,GAAG,EAAb;;AAEA,MAAG,CAACD,YAAY,CAACE,KAAjB,EAAwB;AACpBD,IAAAA,MAAM,CAACC,KAAP,GAAe,oBAAf;AACH,GAFD,MAEO,IAAI,CAAC,eAAeC,IAAf,CAAoBH,YAAY,CAACE,KAAjC,CAAL,EAA8C;AACjDD,IAAAA,MAAM,CAACC,KAAP,GAAe,mBAAf;AACH;;AAED,MAAG,CAACF,YAAY,CAACI,QAAjB,EAA2B;AACvBH,IAAAA,MAAM,CAACG,QAAP,GAAkB,uBAAlB;AACH;;AAED,MAAGJ,YAAY,CAACE,KAAb,KAAuBH,YAAY,CAACG,KAAvC,EAA8C;AAC1CD,IAAAA,MAAM,CAACC,KAAP,GAAe,8BAAf;AACH;;AAGD,MAAGF,YAAY,CAACI,QAAb,KAA0BL,YAAY,CAACK,QAA1C,EAAoD;AAChDH,IAAAA,MAAM,CAACG,QAAP,GAAkB,wBAAlB;AACH;;AAID,SAAOH,MAAP;AACC;;KAzBIH,e;AA2BL,eAAeA,eAAf","sourcesContent":["\r\nfunction LoginValidation(existingUser, loginDetails) {\r\n    let errors = {}\r\n\r\n    if(!loginDetails.email) {\r\n        errors.email = \"Email is required.\"\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(loginDetails.email)) {\r\n        errors.email = \"Email is invalid.\"\r\n    }\r\n\r\n    if(!loginDetails.password) {\r\n        errors.password = \"Password is required.\"\r\n    }\r\n    \r\n    if(loginDetails.email === existingUser.email) {\r\n        errors.email = \"This account already exists.\"\r\n    }\r\n\r\n\r\n    if(loginDetails.password === existingUser.password) {\r\n        errors.password = \"Password is incorrect.\"\r\n    }\r\n\r\n\r\n    \r\n    return errors\r\n    }\r\n    \r\n    export default LoginValidation"]},"metadata":{},"sourceType":"module"}